//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbasetest/src/main/java/co/touchlab/doppel/testing/TestingContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDoppelTestingTestingContext")
#ifdef RESTRICT_CoTouchlabDoppelTestingTestingContext
#define INCLUDE_ALL_CoTouchlabDoppelTestingTestingContext 0
#else
#define INCLUDE_ALL_CoTouchlabDoppelTestingTestingContext 1
#endif
#undef RESTRICT_CoTouchlabDoppelTestingTestingContext

#if !defined (CoTouchlabDoppelTestingTestingContext_) && (INCLUDE_ALL_CoTouchlabDoppelTestingTestingContext || defined(INCLUDE_CoTouchlabDoppelTestingTestingContext))
#define CoTouchlabDoppelTestingTestingContext_

#define RESTRICT_AndroidContentIOSContext 1
#define INCLUDE_AndroidContentIOSContext 1
#include "AndroidContentIOSContext.h"

@class AndroidDatabaseSqliteSQLiteDatabase;
@class AndroidOsLooper;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaIoFileInputStream;
@class JavaIoFileOutputStream;
@protocol AndroidContentSharedPreferences;
@protocol AndroidDatabaseDatabaseErrorHandler;
@protocol AndroidDatabaseSqliteSQLiteDatabase_CursorFactory;

@interface CoTouchlabDoppelTestingTestingContext : AndroidContentIOSContext

#pragma mark Public

- (instancetype)initWithJavaIoFile:(JavaIoFile *)rootDir;

- (IOSObjectArray *)databaseList;

- (jboolean)deleteDatabaseWithNSString:(NSString *)name;

- (jboolean)deleteFileWithNSString:(NSString *)name;

- (IOSObjectArray *)fileList;

- (JavaIoFile *)getCacheDir;

- (JavaIoFile *)getDatabasePathWithNSString:(NSString *)name;

- (JavaIoFile *)getDirWithNSString:(NSString *)name
                           withInt:(jint)mode;

- (JavaIoFile *)getExternalFilesDirWithNSString:(NSString *)type;

- (IOSObjectArray *)getExternalFilesDirsWithNSString:(NSString *)type;

- (JavaIoFile *)getFilesDir;

- (JavaIoFile *)getFileStreamPathWithNSString:(NSString *)name;

- (AndroidOsLooper *)getMainLooper;

- (id<AndroidContentSharedPreferences>)getSharedPreferencesWithNSString:(NSString *)name
                                                                withInt:(jint)mode;

- (JavaIoFile *)getSharedPrefsFileWithNSString:(NSString *)name;

- (JavaIoFileInputStream *)openFileInputWithNSString:(NSString *)name;

- (JavaIoFileOutputStream *)openFileOutputWithNSString:(NSString *)name
                                               withInt:(jint)mode;

- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
                                                                  withInt:(jint)mode
                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory;

- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
                                                                  withInt:(jint)mode
                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingTestingContext)

inline NSString *CoTouchlabDoppelTestingTestingContext_get_DATABASES();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *CoTouchlabDoppelTestingTestingContext_DATABASES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabDoppelTestingTestingContext, DATABASES, NSString *)

inline NSString *CoTouchlabDoppelTestingTestingContext_get_TAG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *CoTouchlabDoppelTestingTestingContext_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabDoppelTestingTestingContext, TAG, NSString *)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingTestingContext_initWithJavaIoFile_(CoTouchlabDoppelTestingTestingContext *self, JavaIoFile *rootDir);

FOUNDATION_EXPORT CoTouchlabDoppelTestingTestingContext *new_CoTouchlabDoppelTestingTestingContext_initWithJavaIoFile_(JavaIoFile *rootDir) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingTestingContext *create_CoTouchlabDoppelTestingTestingContext_initWithJavaIoFile_(JavaIoFile *rootDir);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingTestingContext)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabDoppelTestingTestingContext")

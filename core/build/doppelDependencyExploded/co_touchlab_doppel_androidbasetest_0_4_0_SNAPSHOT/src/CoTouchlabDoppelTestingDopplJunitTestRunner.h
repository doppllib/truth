//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbasetest/src/main/java/co/touchlab/doppel/testing/DopplJunitTestRunner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner")
#ifdef RESTRICT_CoTouchlabDoppelTestingDopplJunitTestRunner
#define INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner 0
#else
#define INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner 1
#endif
#undef RESTRICT_CoTouchlabDoppelTestingDopplJunitTestRunner

#if !defined (CoTouchlabDoppelTestingDopplJunitTestRunner_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestRunner))
#define CoTouchlabDoppelTestingDopplJunitTestRunner_

@class CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat;
@class CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder;
@class IOSClass;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class OrgJunitRunnerJUnitCore;
@class OrgJunitRunnerNotificationRunListener;
@class OrgJunitRunnerResult;
@protocol CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener;

@interface CoTouchlabDoppelTestingDopplJunitTestRunner : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)outArg;

+ (jint)mainWithNSStringArray:(IOSObjectArray *)args;

- (OrgJunitRunnerNotificationRunListener *)newRunListenerWithCoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat:(CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *)outputFormat OBJC_METHOD_FAMILY_NONE;

- (jint)run;

+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes
withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
withCoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener:(id<CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener>)dopplJunitListener;

+ (jint)runWithNSStringArray:(IOSObjectArray *)classes
withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
withCoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener:(id<CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener>)dopplListener;

+ (OrgJunitRunnerResult *)runSpecificTestWithOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)junitCore
                                                        withNSString:(NSString *)c;

- (void)sortClassesWithIOSClassArray:(IOSObjectArray *)classes
withCoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder:(CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *)sortOrder;

#pragma mark Protected

- (jboolean)isJUnit3TestClassWithIOSClass:(IOSClass *)cls;

- (jboolean)isJUnit4TestClassWithIOSClass:(IOSClass *)cls;

- (jboolean)isJUnitTestClassWithIOSClass:(IOSClass *)cls;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestRunner)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplJunitTestRunner_init(CoTouchlabDoppelTestingDopplJunitTestRunner *self);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner *new_CoTouchlabDoppelTestingDopplJunitTestRunner_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner *create_CoTouchlabDoppelTestingDopplJunitTestRunner_init();

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplJunitTestRunner_initWithJavaIoPrintStream_(CoTouchlabDoppelTestingDopplJunitTestRunner *self, JavaIoPrintStream *outArg);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner *new_CoTouchlabDoppelTestingDopplJunitTestRunner_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner *create_CoTouchlabDoppelTestingDopplJunitTestRunner_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg);

FOUNDATION_EXPORT jint CoTouchlabDoppelTestingDopplJunitTestRunner_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT jint CoTouchlabDoppelTestingDopplJunitTestRunner_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener> dopplListener);

FOUNDATION_EXPORT OrgJunitRunnerResult *CoTouchlabDoppelTestingDopplJunitTestRunner_runSpecificTestWithOrgJunitRunnerJUnitCore_withNSString_(OrgJunitRunnerJUnitCore *junitCore, NSString *c);

FOUNDATION_EXPORT jint CoTouchlabDoppelTestingDopplJunitTestRunner_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener> dopplJunitListener);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestRunner)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat))
#define CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_Enum) {
  CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_Enum_JUNIT = 0,
  CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_Enum_GTM_UNIT_TESTING = 1,
};

@interface CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_values_[];

inline CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_get_JUNIT();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat, JUNIT)

inline CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_get_GTM_UNIT_TESTING();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat, GTM_UNIT_TESTING)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_values();

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestRunner_OutputFormat)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder))
#define CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_Enum) {
  CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_Enum_ALPHABETICAL = 0,
  CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_Enum_RANDOM = 1,
};

@interface CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_values_[];

inline CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_get_ALPHABETICAL();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder, ALPHABETICAL)

inline CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_get_RANDOM();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder, RANDOM)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_values();

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder *CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestRunner_SortOrder)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion))
#define CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_Enum) {
  CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_Enum_INCLUDE = 0,
  CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_Enum_EXCLUDE = 1,
};

@interface CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_values_[];

inline CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_get_INCLUDE();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion, INCLUDE)

inline CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_get_EXCLUDE();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion, EXCLUDE)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_values();

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestRunner_TestInclusion)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener))
#define CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener_

@protocol CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener < JavaObject >

- (void)startRunWithNSString:(NSString *)run;

- (void)endRunWithNSString:(NSString *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener)

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestRunner_DopplJunitListener)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer))
#define CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer_

@class OrgJunitRunnerResult;

@interface CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer : NSObject {
 @public
  OrgJunitRunnerResult *result_;
  NSString *testClassName_;
}

#pragma mark Public

- (instancetype)initWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result
                                withNSString:(NSString *)testClassName;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer)

J2OBJC_FIELD_SETTER(CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer, result_, OrgJunitRunnerResult *)
J2OBJC_FIELD_SETTER(CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer, testClassName_, NSString *)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer *self, OrgJunitRunnerResult *result, NSString *testClassName);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer *new_CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer *create_CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestRunner_ResultContainer)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestRunner")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbasetest/src/main/java/co/touchlab/doppel/testing/RuntimeEnvironment.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDoppelTestingRuntimeEnvironment")
#ifdef RESTRICT_CoTouchlabDoppelTestingRuntimeEnvironment
#define INCLUDE_ALL_CoTouchlabDoppelTestingRuntimeEnvironment 0
#else
#define INCLUDE_ALL_CoTouchlabDoppelTestingRuntimeEnvironment 1
#endif
#undef RESTRICT_CoTouchlabDoppelTestingRuntimeEnvironment

#if !defined (CoTouchlabDoppelTestingRuntimeEnvironment_) && (INCLUDE_ALL_CoTouchlabDoppelTestingRuntimeEnvironment || defined(INCLUDE_CoTouchlabDoppelTestingRuntimeEnvironment))
#define CoTouchlabDoppelTestingRuntimeEnvironment_

@class AndroidAppApplication;

@interface CoTouchlabDoppelTestingRuntimeEnvironment : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingRuntimeEnvironment)

inline AndroidAppApplication *CoTouchlabDoppelTestingRuntimeEnvironment_get_application();
inline AndroidAppApplication *CoTouchlabDoppelTestingRuntimeEnvironment_set_application(AndroidAppApplication *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidAppApplication *CoTouchlabDoppelTestingRuntimeEnvironment_application;
J2OBJC_STATIC_FIELD_OBJ(CoTouchlabDoppelTestingRuntimeEnvironment, application, AndroidAppApplication *)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingRuntimeEnvironment_init(CoTouchlabDoppelTestingRuntimeEnvironment *self);

FOUNDATION_EXPORT CoTouchlabDoppelTestingRuntimeEnvironment *new_CoTouchlabDoppelTestingRuntimeEnvironment_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingRuntimeEnvironment *create_CoTouchlabDoppelTestingRuntimeEnvironment_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingRuntimeEnvironment)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabDoppelTestingRuntimeEnvironment")

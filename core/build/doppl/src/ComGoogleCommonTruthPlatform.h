//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthPlatform")
#ifdef RESTRICT_ComGoogleCommonTruthPlatform
#define INCLUDE_ALL_ComGoogleCommonTruthPlatform 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthPlatform 1
#endif
#undef RESTRICT_ComGoogleCommonTruthPlatform

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthPlatform_) && (INCLUDE_ALL_ComGoogleCommonTruthPlatform || defined(INCLUDE_ComGoogleCommonTruthPlatform))
#define ComGoogleCommonTruthPlatform_

@class IOSClass;
@class JavaLangAssertionError;
@class JavaUtilRegexPattern;

@interface ComGoogleCommonTruthPlatform : NSObject

#pragma mark Public

+ (JavaLangAssertionError *)comparisonFailureWithNSString:(NSString *)message
                                             withNSString:(NSString *)expected
                                             withNSString:(NSString *)actual;

+ (NSString *)compressTypeWithNSString:(NSString *)type;

+ (jboolean)containsMatchWithNSString:(NSString *)subject
                         withNSString:(NSString *)regex;

+ (jboolean)isInstanceOfTypeWithId:(id)instance
                      withIOSClass:(IOSClass *)clazz;

#pragma mark Package-Private

+ (jint)getArrayLengthWithId:(id)array;

+ (id)getFromArrayWithId:(id)array
                 withInt:(jint)i;

+ (jboolean)isInstanceOfTypeGWTWithId:(id)instance
                         withIOSClass:(IOSClass *)clazz;

+ (jboolean)isInstanceOfTypeJavaWithId:(id)instance
                          withIOSClass:(IOSClass *)clazz;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonTruthPlatform)

inline JavaUtilRegexPattern *ComGoogleCommonTruthPlatform_get_TYPE_PATTERN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *ComGoogleCommonTruthPlatform_TYPE_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthPlatform, TYPE_PATTERN, JavaUtilRegexPattern *)

FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeWithId_withIOSClass_(id instance, IOSClass *clazz);

FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeJavaWithId_withIOSClass_(id instance, IOSClass *clazz);

FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_isInstanceOfTypeGWTWithId_withIOSClass_(id instance, IOSClass *clazz);

FOUNDATION_EXPORT NSString *ComGoogleCommonTruthPlatform_compressTypeWithNSString_(NSString *type);

FOUNDATION_EXPORT JavaLangAssertionError *ComGoogleCommonTruthPlatform_comparisonFailureWithNSString_withNSString_withNSString_(NSString *message, NSString *expected, NSString *actual);

FOUNDATION_EXPORT jboolean ComGoogleCommonTruthPlatform_containsMatchWithNSString_withNSString_(NSString *subject, NSString *regex);

FOUNDATION_EXPORT jint ComGoogleCommonTruthPlatform_getArrayLengthWithId_(id array);

FOUNDATION_EXPORT id ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(id array, jint i);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthPlatform)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthPlatform")

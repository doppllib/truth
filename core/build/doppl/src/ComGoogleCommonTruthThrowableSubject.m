//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleCommonTruthFailureStrategy.h"
#include "ComGoogleCommonTruthSubject.h"
#include "ComGoogleCommonTruthThrowableSubject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Objects.h"
#include "java/lang/AssertionError.h"
#include "java/lang/CharSequence.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonTruthThrowableSubject ()

+ (ComGoogleCommonTruthFailureStrategy *)causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
                                                                                       withNSException:(NSException *)defaultCause;

@end

__attribute__((unused)) static ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *delegate, NSException *defaultCause);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$1();

@interface ComGoogleCommonTruthThrowableSubject_1 : ComGoogleCommonTruthFailureStrategy {
 @public
  ComGoogleCommonTruthFailureStrategy *val$delegate_;
  NSException *val$defaultCause_;
}

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)capture$0
                                            withNSException:(NSException *)capture$1;

- (void)failWithNSString:(NSString *)message;

- (void)failWithNSString:(NSString *)message
         withNSException:(NSException *)cause;

- (void)failComparingWithNSString:(NSString *)message
         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthThrowableSubject_1)

__attribute__((unused)) static void ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject_1 *self, ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1);

__attribute__((unused)) static ComGoogleCommonTruthThrowableSubject_1 *new_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonTruthThrowableSubject_1 *create_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1);

@implementation ComGoogleCommonTruthThrowableSubject

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                                            withNSException:(NSException *)throwable {
  ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(self, failureStrategy, throwable);
  return self;
}

- (void)hasMessageWithNSString:(NSString *)expected {
  NSString *actual = [((NSException *) nil_chk([self actual])) getMessage];
  if (!ComGoogleCommonBaseObjects_equalWithId_withId_(expected, actual)) {
    if (expected != nil && actual != nil) {
      [((ComGoogleCommonTruthFailureStrategy *) nil_chk(failureStrategy_)) failComparingWithNSString:JreStrcat("$$$C", [self actualAsString], @" does not have message <", expected, '>') withJavaLangCharSequence:expected withJavaLangCharSequence:actual];
    }
    else {
      [self failWithNSString:@"has message" withId:expected];
    }
  }
}

+ (ComGoogleCommonTruthFailureStrategy *)causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
                                                                                       withNSException:(NSException *)defaultCause {
  return ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(delegate, defaultCause);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, 1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, 4 },
    { NULL, "LComGoogleCommonTruthFailureStrategy;", 0xa, 5, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSException:);
  methods[1].selector = @selector(hasMessageWithNSString:);
  methods[2].selector = @selector(causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:withNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LNSException;", (void *)&ComGoogleCommonTruthThrowableSubject__Annotations$0, "hasMessage", "LNSString;", (void *)&ComGoogleCommonTruthThrowableSubject__Annotations$1, "causeInsertingStrategy", "Lcom/google/common/truth/Subject<Lcom/google/common/truth/ThrowableSubject;Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthThrowableSubject = { "ThrowableSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, 6, -1 };
  return &_ComGoogleCommonTruthThrowableSubject;
}

@end

void ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) {
  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(failureStrategy, throwable), throwable);
}

ComGoogleCommonTruthThrowableSubject *new_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthThrowableSubject, initWithComGoogleCommonTruthFailureStrategy_withNSException_, failureStrategy, throwable)
}

ComGoogleCommonTruthThrowableSubject *create_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSException *throwable) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthThrowableSubject, initWithComGoogleCommonTruthFailureStrategy_withNSException_, failureStrategy, throwable)
}

ComGoogleCommonTruthFailureStrategy *ComGoogleCommonTruthThrowableSubject_causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *delegate, NSException *defaultCause) {
  ComGoogleCommonTruthThrowableSubject_initialize();
  return create_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(delegate, defaultCause);
}

IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthThrowableSubject__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthThrowableSubject)

@implementation ComGoogleCommonTruthThrowableSubject_1

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)capture$0
                                            withNSException:(NSException *)capture$1 {
  ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(self, capture$0, capture$1);
  return self;
}

- (void)failWithNSString:(NSString *)message {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(val$delegate_)) failWithNSString:message withNSException:val$defaultCause_];
}

- (void)failWithNSString:(NSString *)message
         withNSException:(NSException *)cause {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(val$delegate_)) failWithNSString:message withNSException:cause];
}

- (void)failComparingWithNSString:(NSString *)message
         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
  @try {
    [((ComGoogleCommonTruthFailureStrategy *) nil_chk(val$delegate_)) failComparingWithNSString:message withJavaLangCharSequence:expected withJavaLangCharSequence:actual];
  }
  @catch (JavaLangAssertionError *e) {
    [((JavaLangAssertionError *) nil_chk(e)) initCauseWithNSException:val$defaultCause_];
    @throw e;
  }
}

- (void)dealloc {
  RELEASE_(val$delegate_);
  RELEASE_(val$defaultCause_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSException:);
  methods[1].selector = @selector(failWithNSString:);
  methods[2].selector = @selector(failWithNSString:withNSException:);
  methods[3].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delegate_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$defaultCause_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "fail", "LNSString;", "LNSString;LNSException;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "LComGoogleCommonTruthThrowableSubject;", "causeInsertingStrategyWithComGoogleCommonTruthFailureStrategy:withNSException:" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthThrowableSubject_1 = { "", "com.google.common.truth", ptrTable, methods, fields, 7, 0x8018, 4, 2, 5, -1, 6, -1, -1 };
  return &_ComGoogleCommonTruthThrowableSubject_1;
}

@end

void ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthThrowableSubject_1 *self, ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) {
  JreStrongAssign(&self->val$delegate_, capture$0);
  JreStrongAssign(&self->val$defaultCause_, capture$1);
  ComGoogleCommonTruthFailureStrategy_init(self);
}

ComGoogleCommonTruthThrowableSubject_1 *new_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthThrowableSubject_1, initWithComGoogleCommonTruthFailureStrategy_withNSException_, capture$0, capture$1)
}

ComGoogleCommonTruthThrowableSubject_1 *create_ComGoogleCommonTruthThrowableSubject_1_initWithComGoogleCommonTruthFailureStrategy_withNSException_(ComGoogleCommonTruthFailureStrategy *capture$0, NSException *capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthThrowableSubject_1, initWithComGoogleCommonTruthFailureStrategy_withNSException_, capture$0, capture$1)
}

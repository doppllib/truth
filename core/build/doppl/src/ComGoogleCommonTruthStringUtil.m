//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleCommonTruthStringUtil.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "java/lang/CharSequence.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonTruthStringUtil ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonTruthStringUtil_init(ComGoogleCommonTruthStringUtil *self);

__attribute__((unused)) static ComGoogleCommonTruthStringUtil *new_ComGoogleCommonTruthStringUtil_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonTruthStringUtil *create_ComGoogleCommonTruthStringUtil_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthStringUtil__Annotations$0();

@implementation ComGoogleCommonTruthStringUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonTruthStringUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)messageForWithNSString:(NSString * __nonnull)message
            withJavaLangCharSequence:(id<JavaLangCharSequence> __nonnull)expected
            withJavaLangCharSequence:(id<JavaLangCharSequence> __nonnull)actual {
  return ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(message, expected, actual);
}

+ (NSString *)formatWithNSString:(NSString * __nullable)template_
               withNSObjectArray:(IOSObjectArray * __nonnull)args {
  return ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(template_, args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x88, 2, 3, -1, -1, -1, 4 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(messageForWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
  methods[2].selector = @selector(formatWithNSString:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "messageFor", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "format", "LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthStringUtil__Annotations$0 };
  static const J2ObjcClassInfo _ComGoogleCommonTruthStringUtil = { "StringUtil", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x10, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonTruthStringUtil;
}

@end

void ComGoogleCommonTruthStringUtil_init(ComGoogleCommonTruthStringUtil *self) {
  NSObject_init(self);
}

ComGoogleCommonTruthStringUtil *new_ComGoogleCommonTruthStringUtil_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthStringUtil, init)
}

ComGoogleCommonTruthStringUtil *create_ComGoogleCommonTruthStringUtil_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthStringUtil, init)
}

NSString *ComGoogleCommonTruthStringUtil_messageForWithNSString_withJavaLangCharSequence_withJavaLangCharSequence_(NSString *message, id<JavaLangCharSequence> expected, id<JavaLangCharSequence> actual) {
  ComGoogleCommonTruthStringUtil_initialize();
  return JreStrcat("$$@$@", ComGoogleCommonBasePreconditions_checkNotNullWithId_(message), @"\n\nExpected:\n", ComGoogleCommonBasePreconditions_checkNotNullWithId_(expected), @"\n\nActual:\n", ComGoogleCommonBasePreconditions_checkNotNullWithId_(actual));
}

NSString *ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(NSString *template_, IOSObjectArray *args) {
  ComGoogleCommonTruthStringUtil_initialize();
  template_ = NSString_java_valueOf_(template_);
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithInt_([((NSString *) nil_chk(template_)) java_length] + 16 * ((IOSObjectArray *) nil_chk(args))->size_);
  jint templateStart = 0;
  jint i = 0;
  while (i < args->size_) {
    jint placeholderStart = [template_ java_indexOfString:@"%s" fromIndex:templateStart];
    if (placeholderStart == -1) {
      break;
    }
    [builder appendWithNSString:[template_ java_substring:templateStart endIndex:placeholderStart]];
    [builder appendWithId:IOSObjectArray_Get(args, i++)];
    templateStart = placeholderStart + 2;
  }
  [builder appendWithNSString:[template_ java_substring:templateStart]];
  if (i < args->size_) {
    [builder appendWithNSString:@" ["];
    [builder appendWithId:IOSObjectArray_Get(args, i++)];
    while (i < args->size_) {
      [builder appendWithNSString:@", "];
      [builder appendWithId:IOSObjectArray_Get(args, i++)];
    }
    [builder appendWithChar:']'];
  }
  return [builder description];
}

IOSObjectArray *ComGoogleCommonTruthStringUtil__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthStringUtil)

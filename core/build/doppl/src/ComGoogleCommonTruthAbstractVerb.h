//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb")
#ifdef RESTRICT_ComGoogleCommonTruthAbstractVerb
#define INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb 1
#endif
#undef RESTRICT_ComGoogleCommonTruthAbstractVerb

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthAbstractVerb_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb || defined(INCLUDE_ComGoogleCommonTruthAbstractVerb))
#define ComGoogleCommonTruthAbstractVerb_

#define RESTRICT_ComGoogleCommonTruthFailureContext 1
#define INCLUDE_ComGoogleCommonTruthFailureContext 1
#include "ComGoogleCommonTruthFailureContext.h"

@class ComGoogleCommonTruthAbstractVerb_DelegatedVerb;
@class ComGoogleCommonTruthFailureStrategy;
@class ComGoogleCommonTruthSubjectFactory;
@class IOSObjectArray;

@interface ComGoogleCommonTruthAbstractVerb : ComGoogleCommonTruthFailureContext

#pragma mark Public

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy;

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                                               withNSString:(NSString *)format
                                          withNSObjectArray:(IOSObjectArray *)args;

- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)aboutWithComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory;

- (void)fail;

- (void)failWithNSString:(NSString *)format
       withNSObjectArray:(IOSObjectArray *)args;

- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)failureMessage;

- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args;

#pragma mark Protected

- (ComGoogleCommonTruthFailureStrategy *)getFailureStrategy;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractVerb)

FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy);

FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractVerb)

#endif

#if !defined (ComGoogleCommonTruthAbstractVerb_DelegatedVerb_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb || defined(INCLUDE_ComGoogleCommonTruthAbstractVerb_DelegatedVerb))
#define ComGoogleCommonTruthAbstractVerb_DelegatedVerb_

@class ComGoogleCommonTruthFailureStrategy;
@class ComGoogleCommonTruthSubject;
@class ComGoogleCommonTruthSubjectFactory;
@class IOSObjectArray;

@interface ComGoogleCommonTruthAbstractVerb_DelegatedVerb : NSObject

#pragma mark Public

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                     withComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory;

- (ComGoogleCommonTruthSubject *)thatWithId:(id)target;

- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)failureMessage;

- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)format
                                                                 withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractVerb_DelegatedVerb)

FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthAbstractVerb_DelegatedVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory);

FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_DelegatedVerb *new_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_DelegatedVerb *create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractVerb_DelegatedVerb)

#endif

#if !defined (ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_) && (INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb || defined(INCLUDE_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy))
#define ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_

#define RESTRICT_ComGoogleCommonTruthFailureStrategy 1
#define INCLUDE_ComGoogleCommonTruthFailureStrategy 1
#include "ComGoogleCommonTruthFailureStrategy.h"

@class ComGoogleCommonTruthFailureContext;
@protocol JavaLangCharSequence;

@interface ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy : ComGoogleCommonTruthFailureStrategy

#pragma mark Public

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
                     withComGoogleCommonTruthFailureContext:(ComGoogleCommonTruthFailureContext *)messageHolder;

- (void)failWithNSString:(NSString *)message;

- (void)failWithNSString:(NSString *)message
         withNSException:(NSException *)cause;

- (void)failComparingWithNSString:(NSString *)message
         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy)

FOUNDATION_EXPORT void ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder);

FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *new_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthAbstractVerb")

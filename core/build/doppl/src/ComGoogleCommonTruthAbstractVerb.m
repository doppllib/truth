//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleCommonTruthAbstractVerb.h"
#include "ComGoogleCommonTruthFailureContext.h"
#include "ComGoogleCommonTruthFailureStrategy.h"
#include "ComGoogleCommonTruthStringUtil.h"
#include "ComGoogleCommonTruthSubject.h"
#include "ComGoogleCommonTruthSubjectFactory.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "java/lang/CharSequence.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nullable.h"

@interface ComGoogleCommonTruthAbstractVerb () {
 @public
  ComGoogleCommonTruthFailureStrategy *failureStrategy_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb, failureStrategy_, ComGoogleCommonTruthFailureStrategy *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$2();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$3();

@interface ComGoogleCommonTruthAbstractVerb_DelegatedVerb () {
 @public
  ComGoogleCommonTruthSubjectFactory *factory_;
  ComGoogleCommonTruthFailureStrategy *failureStrategy_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, factory_, ComGoogleCommonTruthSubjectFactory *)
J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, failureStrategy_, ComGoogleCommonTruthFailureStrategy *)

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$2();

@interface ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy () {
 @public
  ComGoogleCommonTruthFailureStrategy *delegate_;
  ComGoogleCommonTruthFailureContext *messageHolder_;
}

- (NSString *)prependFailureMessageIfAnyWithNSString:(NSString *)message;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, delegate_, ComGoogleCommonTruthFailureStrategy *)
J2OBJC_FIELD_SETTER(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, messageHolder_, ComGoogleCommonTruthFailureContext *)

__attribute__((unused)) static NSString *ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, NSString *message);

@implementation ComGoogleCommonTruthAbstractVerb

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy {
  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_(self, failureStrategy);
  return self;
}

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                                               withNSString:(NSString *)format
                                          withNSObjectArray:(IOSObjectArray *)args {
  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, failureStrategy, format, args);
  return self;
}

- (ComGoogleCommonTruthFailureStrategy *)getFailureStrategy {
  return [self hasFailureMessage] ? create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(failureStrategy_, self) : failureStrategy_;
}

- (void)fail {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk([self getFailureStrategy])) failWithNSString:@""];
}

- (void)failWithNSString:(NSString *)format
       withNSObjectArray:(IOSObjectArray *)args {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk([self getFailureStrategy])) failWithNSString:ComGoogleCommonTruthStringUtil_formatWithNSString_withNSObjectArray_(format, args)];
}

- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)failureMessage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonTruthAbstractVerb *)withFailureMessageWithNSString:(NSString *)format
                                                   withNSObjectArray:(IOSObjectArray *)args {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)aboutWithComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory {
  return create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_([self getFailureStrategy], factory);
}

- (void)dealloc {
  RELEASE_(failureStrategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x81, -1, 1, -1, -1, -1, 2 },
    { NULL, "LComGoogleCommonTruthFailureStrategy;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 3, 4, -1, -1, -1, 5 },
    { NULL, "LComGoogleCommonTruthAbstractVerb;", 0x401, 6, 7, -1, 8, -1, 9 },
    { NULL, "LComGoogleCommonTruthAbstractVerb;", 0x481, 6, 4, -1, 10, -1, 11 },
    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x1, 12, 13, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:);
  methods[1].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSString:withNSObjectArray:);
  methods[2].selector = @selector(getFailureStrategy);
  methods[3].selector = @selector(fail);
  methods[4].selector = @selector(failWithNSString:withNSObjectArray:);
  methods[5].selector = @selector(withFailureMessageWithNSString:);
  methods[6].selector = @selector(withFailureMessageWithNSString:withNSObjectArray:);
  methods[7].selector = @selector(aboutWithComGoogleCommonTruthSubjectFactory:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "failureStrategy_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;", "LComGoogleCommonTruthFailureStrategy;LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$0, "fail", "LNSString;[LNSObject;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$1, "withFailureMessage", "LNSString;", "(Ljava/lang/String;)TT;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$2, "(Ljava/lang/String;[Ljava/lang/Object;)TT;", (void *)&ComGoogleCommonTruthAbstractVerb__Annotations$3, "about", "LComGoogleCommonTruthSubjectFactory;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;SF:Lcom/google/common/truth/SubjectFactory<TS;TT;>;>(TSF;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;LComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy;", "<T:Lcom/google/common/truth/AbstractVerb<TT;>;>Lcom/google/common/truth/FailureContext;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractVerb = { "AbstractVerb", "com.google.common.truth", ptrTable, methods, fields, 7, 0x401, 8, 1, -1, 15, -1, 16, -1 };
  return &_ComGoogleCommonTruthAbstractVerb;
}

@end

void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy) {
  ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(self, failureStrategy, nil, [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
}

void ComGoogleCommonTruthAbstractVerb_initWithComGoogleCommonTruthFailureStrategy_withNSString_withNSObjectArray_(ComGoogleCommonTruthAbstractVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *format, IOSObjectArray *args) {
  ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(self, format, args);
  JreStrongAssign(&self->failureStrategy_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(failureStrategy));
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractVerb)

@implementation ComGoogleCommonTruthAbstractVerb_DelegatedVerb

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                     withComGoogleCommonTruthSubjectFactory:(ComGoogleCommonTruthSubjectFactory *)factory {
  ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(self, failureStrategy, factory);
  return self;
}

- (ComGoogleCommonTruthSubject *)thatWithId:(id)target {
  return [((ComGoogleCommonTruthSubjectFactory *) nil_chk(factory_)) getSubjectWithComGoogleCommonTruthFailureStrategy:failureStrategy_ withId:target];
}

- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)failureMessage {
  return failureMessage == nil ? [self withFailureMessageWithNSString:nil withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]] : [self withFailureMessageWithNSString:@"%s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ failureMessage } count:1 type:NSObject_class_()]];
}

- (ComGoogleCommonTruthAbstractVerb_DelegatedVerb *)withFailureMessageWithNSString:(NSString *)format
                                                                 withNSObjectArray:(IOSObjectArray *)args {
  ComGoogleCommonTruthFailureContext *holder = create_ComGoogleCommonTruthFailureContext_initWithNSString_withNSObjectArray_(format, args);
  return create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(failureStrategy_, holder), factory_);
}

- (void)dealloc {
  RELEASE_(factory_);
  RELEASE_(failureStrategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleCommonTruthSubject;", 0x1, 2, 3, -1, 4, -1, 5 },
    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x1, 6, 7, -1, 8, -1, 9 },
    { NULL, "LComGoogleCommonTruthAbstractVerb_DelegatedVerb;", 0x81, 6, 10, -1, 11, -1, 12 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonTruthSubjectFactory:);
  methods[1].selector = @selector(thatWithId:);
  methods[2].selector = @selector(withFailureMessageWithNSString:);
  methods[3].selector = @selector(withFailureMessageWithNSString:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "factory_", "LComGoogleCommonTruthSubjectFactory;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "failureStrategy_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonTruthSubjectFactory;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/truth/SubjectFactory<TS;TT;>;)V", "that", "LNSObject;", "(TT;)TS;", (void *)&ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$0, "withFailureMessage", "LNSString;", "(Ljava/lang/String;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", (void *)&ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$1, "LNSString;[LNSObject;", "(Ljava/lang/String;[Ljava/lang/Object;)Lcom/google/common/truth/AbstractVerb$DelegatedVerb<TS;TT;>;", (void *)&ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$2, "Lcom/google/common/truth/SubjectFactory<TS;TT;>;", "LComGoogleCommonTruthAbstractVerb;", "<S:Lcom/google/common/truth/Subject<TS;TT;>;T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractVerb_DelegatedVerb = { "DelegatedVerb", "com.google.common.truth", ptrTable, methods, fields, 7, 0x19, 4, 2, 14, -1, -1, 15, -1 };
  return &_ComGoogleCommonTruthAbstractVerb_DelegatedVerb;
}

@end

void ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthAbstractVerb_DelegatedVerb *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) {
  NSObject_init(self);
  JreStrongAssign(&self->factory_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(factory));
  JreStrongAssign(&self->failureStrategy_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(failureStrategy));
}

ComGoogleCommonTruthAbstractVerb_DelegatedVerb *new_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_, failureStrategy, factory)
}

ComGoogleCommonTruthAbstractVerb_DelegatedVerb *create_ComGoogleCommonTruthAbstractVerb_DelegatedVerb_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonTruthSubjectFactory *factory) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthAbstractVerb_DelegatedVerb, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthSubjectFactory_, failureStrategy, factory)
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAbstractVerb_DelegatedVerb__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractVerb_DelegatedVerb)

@implementation ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)delegate
                     withComGoogleCommonTruthFailureContext:(ComGoogleCommonTruthFailureContext *)messageHolder {
  ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(self, delegate, messageHolder);
  return self;
}

- (void)failWithNSString:(NSString *)message {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(delegate_)) failWithNSString:ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message)];
}

- (void)failWithNSString:(NSString *)message
         withNSException:(NSException *)cause {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(delegate_)) failWithNSString:ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message) withNSException:cause];
}

- (void)failComparingWithNSString:(NSString *)message
         withJavaLangCharSequence:(id<JavaLangCharSequence>)expected
         withJavaLangCharSequence:(id<JavaLangCharSequence>)actual {
  [((ComGoogleCommonTruthFailureStrategy *) nil_chk(delegate_)) failComparingWithNSString:ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message) withJavaLangCharSequence:expected withJavaLangCharSequence:actual];
}

- (NSString *)prependFailureMessageIfAnyWithNSString:(NSString *)message {
  return ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(self, message);
}

- (void)dealloc {
  RELEASE_(delegate_);
  RELEASE_(messageHolder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 6, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonTruthFailureContext:);
  methods[1].selector = @selector(failWithNSString:);
  methods[2].selector = @selector(failWithNSString:withNSException:);
  methods[3].selector = @selector(failComparingWithNSString:withJavaLangCharSequence:withJavaLangCharSequence:);
  methods[4].selector = @selector(prependFailureMessageIfAnyWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LComGoogleCommonTruthFailureStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "messageHolder_", "LComGoogleCommonTruthFailureContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonTruthFailureContext;", "fail", "LNSString;", "LNSString;LNSException;", "failComparing", "LNSString;LJavaLangCharSequence;LJavaLangCharSequence;", "prependFailureMessageIfAny", "LComGoogleCommonTruthAbstractVerb;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy = { "MessagePrependingFailureStrategy", "com.google.common.truth", ptrTable, methods, fields, 7, 0xc, 5, 2, 7, -1, -1, -1, -1 };
  return &_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy;
}

@end

void ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) {
  ComGoogleCommonTruthFailureStrategy_init(self);
  JreStrongAssign(&self->delegate_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(delegate));
  JreStrongAssign(&self->messageHolder_, ComGoogleCommonBasePreconditions_checkNotNullWithId_(messageHolder));
}

ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *new_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_, delegate, messageHolder)
}

ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *create_ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_(ComGoogleCommonTruthFailureStrategy *delegate, ComGoogleCommonTruthFailureContext *messageHolder) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonTruthFailureContext_, delegate, messageHolder)
}

NSString *ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy_prependFailureMessageIfAnyWithNSString_(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy *self, NSString *message) {
  return [((ComGoogleCommonTruthFailureContext *) nil_chk(self->messageHolder_)) getFailureMessage] == nil ? message : JreStrcat("$$$", [self->messageHolder_ getFailureMessage], @": ", message);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAbstractVerb_MessagePrependingFailureStrategy)

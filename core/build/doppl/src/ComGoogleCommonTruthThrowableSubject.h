//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject")
#ifdef RESTRICT_ComGoogleCommonTruthThrowableSubject
#define INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthThrowableSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthThrowableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject || defined(INCLUDE_ComGoogleCommonTruthThrowableSubject))
#define ComGoogleCommonTruthThrowableSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "ComGoogleCommonTruthSubject.h"

@class ComGoogleCommonTruthFailureStrategy;
@class IOSObjectArray;
@class JavaLangThrowable;

@interface ComGoogleCommonTruthThrowableSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
                                      withJavaLangThrowable:(JavaLangThrowable * __nullable)throwable;

- (void)hasMessageWithNSString:(NSString * __nullable)expected;

- (ComGoogleCommonTruthThrowableSubject *)namedWithNSString:(NSString * __nonnull)arg0
                                          withNSObjectArray:(IOSObjectArray * __nonnull)arg1;

#pragma mark Protected

- (JavaLangThrowable *)actual;

- (JavaLangThrowable *)getSubject;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)arg0
                                                     withId:(id __nonnull)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthThrowableSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangThrowable_(ComGoogleCommonTruthThrowableSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangThrowable *throwable);

FOUNDATION_EXPORT ComGoogleCommonTruthThrowableSubject *new_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangThrowable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangThrowable *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthThrowableSubject *create_ComGoogleCommonTruthThrowableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangThrowable_(ComGoogleCommonTruthFailureStrategy *failureStrategy, JavaLangThrowable *throwable);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthThrowableSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthThrowableSubject")

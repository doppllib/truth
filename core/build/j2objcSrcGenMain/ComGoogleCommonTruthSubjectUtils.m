//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/truth/core/src/main/java/com/google/common/truth/SubjectUtils.java
//

#include "ComGoogleCommonTruthSubjectUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

@interface ComGoogleCommonTruthSubjectUtils ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComGoogleCommonTruthSubjectUtils_init(ComGoogleCommonTruthSubjectUtils *self);

__attribute__((unused)) static ComGoogleCommonTruthSubjectUtils *new_ComGoogleCommonTruthSubjectUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonTruthSubjectUtils *create_ComGoogleCommonTruthSubjectUtils_init();

@implementation ComGoogleCommonTruthSubjectUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonTruthSubjectUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaUtilList>)accumulateWithId:(id)first
                              withId:(id)second
                   withNSObjectArray:(IOSObjectArray *)rest {
  return ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(first, second, rest);
}

+ (jint)countOfWithId:(id)t
 withJavaLangIterable:(id<JavaLangIterable>)items {
  return ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(t, items);
}

+ (id<JavaUtilList>)countDuplicatesWithJavaUtilCollection:(id<JavaUtilCollection>)items {
  return ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(items);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x88, 0, 1, -1, 2, -1, -1 },
    { NULL, "I", 0x8, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilList;", 0x8, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(accumulateWithId:withId:withNSObjectArray:);
  methods[2].selector = @selector(countOfWithId:withJavaLangIterable:);
  methods[3].selector = @selector(countDuplicatesWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "accumulate", "LNSObject;LNSObject;[LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;[TT;)Ljava/util/List<TT;>;", "countOf", "LNSObject;LJavaLangIterable;", "<T:Ljava/lang/Object;>(TT;Ljava/lang/Iterable<TT;>;)I", "countDuplicates", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;)Ljava/util/List<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthSubjectUtils = { "SubjectUtils", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x10, 4, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleCommonTruthSubjectUtils;
}

@end

void ComGoogleCommonTruthSubjectUtils_init(ComGoogleCommonTruthSubjectUtils *self) {
  NSObject_init(self);
}

ComGoogleCommonTruthSubjectUtils *new_ComGoogleCommonTruthSubjectUtils_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthSubjectUtils, init)
}

ComGoogleCommonTruthSubjectUtils *create_ComGoogleCommonTruthSubjectUtils_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthSubjectUtils, init)
}

id<JavaUtilList> ComGoogleCommonTruthSubjectUtils_accumulateWithId_withId_withNSObjectArray_(id first, id second, IOSObjectArray *rest) {
  ComGoogleCommonTruthSubjectUtils_initialize();
  id<JavaUtilList> items = create_JavaUtilArrayList_initWithInt_(2 + ((rest == nil) ? 1 : ((IOSObjectArray *) nil_chk(rest))->size_));
  [items addWithId:first];
  [items addWithId:second];
  if (rest == nil) {
    [items addWithId:nil];
  }
  else {
    [items addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(rest)];
  }
  return items;
}

jint ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(id t, id<JavaLangIterable> items) {
  ComGoogleCommonTruthSubjectUtils_initialize();
  jint count = 0;
  for (id __strong item in nil_chk(items)) {
    if (t == nil ? (item == nil) : [t isEqual:item]) {
      count++;
    }
  }
  return count;
}

id<JavaUtilList> ComGoogleCommonTruthSubjectUtils_countDuplicatesWithJavaUtilCollection_(id<JavaUtilCollection> items) {
  ComGoogleCommonTruthSubjectUtils_initialize();
  id<JavaUtilList> itemSet = create_JavaUtilArrayList_init();
  for (id __strong item in nil_chk(items)) {
    if (![itemSet containsWithId:item]) {
      [itemSet addWithId:item];
    }
  }
  IOSObjectArray *params = [IOSObjectArray arrayWithLength:[itemSet size] type:NSObject_class_()];
  jint n = 0;
  for (id __strong item in itemSet) {
    jint count = ComGoogleCommonTruthSubjectUtils_countOfWithId_withJavaLangIterable_(item, items);
    IOSObjectArray_Set(params, n++, (count > 1) ? JreStrcat("@$I$", item, @" [", count, @" copies]") : (id) item);
  }
  return JavaUtilArrays_asListWithNSObjectArray_(params);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthSubjectUtils)

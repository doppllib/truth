//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSubject")
#ifdef RESTRICT_ComGoogleCommonTruthSubject
#define INCLUDE_ALL_ComGoogleCommonTruthSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthSubject || defined(INCLUDE_ComGoogleCommonTruthSubject))
#define ComGoogleCommonTruthSubject_

@class ComGoogleCommonTruthFailureStrategy;
@class ComGoogleCommonTruthTestVerb;
@class IOSClass;
@class IOSObjectArray;
@protocol JavaLangIterable;

@interface ComGoogleCommonTruthSubject : NSObject {
 @public
  ComGoogleCommonTruthFailureStrategy *failureStrategy_;
}

#pragma mark Public

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
                                                     withId:(id __nullable)actual;

- (jboolean)isEqual:(id __nullable)o;

- (NSUInteger)hash;

- (void)isAnyOfWithId:(id __nullable)first
               withId:(id __nullable)second
    withNSObjectArray:(IOSObjectArray * __nullable)rest;

- (void)isEqualToWithId:(id __nullable)other;

- (void)isInWithJavaLangIterable:(id<JavaLangIterable> __nonnull)iterable;

- (void)isInstanceOfWithIOSClass:(IOSClass * __nonnull)clazz;

- (void)isNoneOfWithId:(id __nullable)first
                withId:(id __nullable)second
     withNSObjectArray:(IOSObjectArray * __nullable)rest;

- (void)isNotEqualToWithId:(id __nullable)other;

- (void)isNotInWithJavaLangIterable:(id<JavaLangIterable> __nonnull)iterable;

- (void)isNotInstanceOfWithIOSClass:(IOSClass * __nonnull)clazz;

- (void)isNotNull;

- (void)isNotSameAsWithId:(id __nullable)other;

- (void)isNull;

- (void)isSameAsWithId:(id __nullable)other;

- (ComGoogleCommonTruthSubject *)namedWithNSString:(NSString * __nonnull)format
                                 withNSObjectArray:(IOSObjectArray * __nonnull)args;

#pragma mark Protected

- (id)actual;

- (NSString *)actualAsString;

- (NSString *)actualCustomStringRepresentation;

- (ComGoogleCommonTruthTestVerb *)check;

- (void)failWithNSString:(NSString * __nonnull)proposition;

- (void)failWithNSString:(NSString * __nonnull)verb
                  withId:(id __nonnull)other;

- (void)failWithNSString:(NSString * __nonnull)verb
       withNSObjectArray:(IOSObjectArray * __nonnull)messageParts;

- (void)failWithBadResultsWithNSString:(NSString * __nonnull)verb
                                withId:(id __nonnull)expected
                          withNSString:(NSString * __nonnull)failVerb
                                withId:(id __nonnull)actual;

- (void)failWithCustomSubjectWithNSString:(NSString * __nonnull)verb
                                   withId:(id __nonnull)expected
                                   withId:(id __nonnull)actual;

- (void)failWithoutActualWithNSString:(NSString * __nonnull)proposition;

- (void)failWithoutSubjectWithNSString:(NSString * __nonnull)proposition;

- (void)failWithRawMessageWithNSString:(NSString * __nonnull)message
                     withNSObjectArray:(IOSObjectArray * __nonnull)parameters;

- (NSString *)getDisplaySubject;

- (id)getSubject;

- (NSString *)internalCustomName;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSubject)

J2OBJC_FIELD_SETTER(ComGoogleCommonTruthSubject, failureStrategy_, ComGoogleCommonTruthFailureStrategy *)

FOUNDATION_EXPORT void ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual);

FOUNDATION_EXPORT ComGoogleCommonTruthSubject *new_ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthSubject *create_ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id actual);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSubject")

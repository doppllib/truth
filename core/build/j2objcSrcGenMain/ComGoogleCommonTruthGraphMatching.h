//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/dopplJavaMain/com/google/common/truth/GraphMatching.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthGraphMatching")
#ifdef RESTRICT_ComGoogleCommonTruthGraphMatching
#define INCLUDE_ALL_ComGoogleCommonTruthGraphMatching 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthGraphMatching 1
#endif
#undef RESTRICT_ComGoogleCommonTruthGraphMatching

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthGraphMatching_) && (INCLUDE_ALL_ComGoogleCommonTruthGraphMatching || defined(INCLUDE_ComGoogleCommonTruthGraphMatching))
#define ComGoogleCommonTruthGraphMatching_

@class ComGoogleCommonCollectImmutableBiMap;
@protocol ComGoogleCommonCollectMultimap;

@interface ComGoogleCommonTruthGraphMatching : NSObject

#pragma mark Package-Private

+ (ComGoogleCommonCollectImmutableBiMap *)maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap> __nonnull)graph;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthGraphMatching)

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableBiMap *ComGoogleCommonTruthGraphMatching_maximumCardinalityBipartiteMatchingWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> graph);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthGraphMatching)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthGraphMatching")

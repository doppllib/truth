//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/truth/core/src/main/java/com/google/common/truth/MapSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMapSubject")
#ifdef RESTRICT_ComGoogleCommonTruthMapSubject
#define INCLUDE_ALL_ComGoogleCommonTruthMapSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthMapSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthMapSubject

#if !defined (ComGoogleCommonTruthMapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthMapSubject || defined(INCLUDE_ComGoogleCommonTruthMapSubject))
#define ComGoogleCommonTruthMapSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "ComGoogleCommonTruthSubject.h"

@class ComGoogleCommonTruthCorrespondence;
@class ComGoogleCommonTruthFailureStrategy;
@class ComGoogleCommonTruthMapSubject_UsingCorrespondence;
@class IOSObjectArray;
@protocol ComGoogleCommonTruthOrdered;
@protocol JavaUtilMap;

@interface ComGoogleCommonTruthMapSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (ComGoogleCommonTruthMapSubject_UsingCorrespondence *)comparingValuesUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;

- (void)containsEntryWithId:(id)key
                     withId:(id)value;

- (id<ComGoogleCommonTruthOrdered>)containsExactly;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
                                                  withId:(id)v0
                                       withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithJavaUtilMap:(id<JavaUtilMap>)expectedMap;

- (void)containsKeyWithId:(id)key;

- (void)doesNotContainEntryWithId:(id)key
                           withId:(id)value;

- (void)doesNotContainKeyWithId:(id)key;

- (void)hasSizeWithInt:(jint)expectedSize;

- (void)isEmpty;

- (void)isEqualToWithId:(id)other;

- (void)isNotEmpty;

- (ComGoogleCommonTruthMapSubject *)namedWithNSString:(NSString *)arg0
                                    withNSObjectArray:(IOSObjectArray *)arg1;

#pragma mark Protected

- (id<JavaUtilMap>)actual;

- (id<JavaUtilMap>)getSubject;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                                            withJavaUtilMap:(id<JavaUtilMap>)map;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMapSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map);

FOUNDATION_EXPORT ComGoogleCommonTruthMapSubject *new_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthMapSubject *create_ComGoogleCommonTruthMapSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaUtilMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMapSubject)

#endif

#if !defined (ComGoogleCommonTruthMapSubject_UsingCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthMapSubject || defined(INCLUDE_ComGoogleCommonTruthMapSubject_UsingCorrespondence))
#define ComGoogleCommonTruthMapSubject_UsingCorrespondence_

@interface ComGoogleCommonTruthMapSubject_UsingCorrespondence : NSObject

#pragma mark Public

- (void)containsEntryWithId:(id)expectedKey
                     withId:(id)expectedValue;

- (void)doesNotContainEntryWithId:(id)excludedKey
                           withId:(id)excludedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMapSubject_UsingCorrespondence)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMapSubject_UsingCorrespondence)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMapSubject")

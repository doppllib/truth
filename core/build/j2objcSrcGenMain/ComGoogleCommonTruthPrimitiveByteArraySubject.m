//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/truth/core/src/main/java/com/google/common/truth/PrimitiveByteArraySubject.java
//

#include "ComGoogleCommonPrimitivesBytes.h"
#include "ComGoogleCommonTruthAbstractArraySubject.h"
#include "ComGoogleCommonTruthFailureStrategy.h"
#include "ComGoogleCommonTruthIterableSubject.h"
#include "ComGoogleCommonTruthPrimitiveByteArraySubject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveByteArraySubject__Annotations$0();

@implementation ComGoogleCommonTruthPrimitiveByteArraySubject

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                                              withByteArray:(IOSByteArray *)o {
  ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(self, failureStrategy, o);
  return self;
}

- (NSString *)underlyingType {
  return @"byte";
}

- (id<JavaUtilList>)listRepresentation {
  return ComGoogleCommonPrimitivesBytes_asListWithByteArray_([self actual]);
}

- (void)isEqualToWithId:(id)expected {
  IOSByteArray *actual = [self actual];
  if (actual == expected) {
    return;
  }
  @try {
    IOSByteArray *expectedArray = (IOSByteArray *) cast_chk(expected, [IOSByteArray class]);
    if (!JavaUtilArrays_equalsWithByteArray_withByteArray_(actual, expectedArray)) {
      [self failWithNSString:@"is equal to" withId:JavaUtilArrays_toStringWithByteArray_(expectedArray)];
    }
  }
  @catch (JavaLangClassCastException *e) {
    [self failWithBadTypeWithId:expected];
  }
}

- (void)isNotEqualToWithId:(id)expected {
  IOSByteArray *actual = [self actual];
  @try {
    IOSByteArray *expectedArray = (IOSByteArray *) cast_chk(expected, [IOSByteArray class]);
    if (actual == expected || JavaUtilArrays_equalsWithByteArray_withByteArray_(actual, expectedArray)) {
      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], JavaUtilArrays_toStringWithByteArray_(expectedArray) } count:2 type:NSObject_class_()]];
    }
  }
  @catch (JavaLangClassCastException *ignored) {
  }
}

- (ComGoogleCommonTruthIterableSubject *)asList {
  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withByteArray:);
  methods[1].selector = @selector(underlyingType);
  methods[2].selector = @selector(listRepresentation);
  methods[3].selector = @selector(isEqualToWithId:);
  methods[4].selector = @selector(isNotEqualToWithId:);
  methods[5].selector = @selector(asList);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[B", "(Lcom/google/common/truth/FailureStrategy;[B)V", (void *)&ComGoogleCommonTruthPrimitiveByteArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Byte;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveByteArraySubject;[LB;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveByteArraySubject = { "PrimitiveByteArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 7, -1 };
  return &_ComGoogleCommonTruthPrimitiveByteArraySubject;
}

@end

void ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthPrimitiveByteArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) {
  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
}

ComGoogleCommonTruthPrimitiveByteArraySubject *new_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveByteArraySubject, initWithComGoogleCommonTruthFailureStrategy_withByteArray_, failureStrategy, o)
}

ComGoogleCommonTruthPrimitiveByteArraySubject *create_ComGoogleCommonTruthPrimitiveByteArraySubject_initWithComGoogleCommonTruthFailureStrategy_withByteArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSByteArray *o) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveByteArraySubject, initWithComGoogleCommonTruthFailureStrategy_withByteArray_, failureStrategy, o)
}

IOSObjectArray *ComGoogleCommonTruthPrimitiveByteArraySubject__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveByteArraySubject)

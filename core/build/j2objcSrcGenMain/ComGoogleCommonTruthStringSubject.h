//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthStringSubject")
#ifdef RESTRICT_ComGoogleCommonTruthStringSubject
#define INCLUDE_ALL_ComGoogleCommonTruthStringSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthStringSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthStringSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthStringSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthStringSubject || defined(INCLUDE_ComGoogleCommonTruthStringSubject))
#define ComGoogleCommonTruthStringSubject_

#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
#include "ComGoogleCommonTruthComparableSubject.h"

@class ComGoogleCommonTruthFailureStrategy;
@class IOSObjectArray;
@class JavaUtilRegexPattern;
@protocol JavaLangCharSequence;
@protocol JavaLangComparable;

@interface ComGoogleCommonTruthStringSubject : ComGoogleCommonTruthComparableSubject

#pragma mark Public

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
                                               withNSString:(NSString * __nullable)string;

- (void)containsWithJavaLangCharSequence:(id<JavaLangCharSequence> __nonnull)string;

- (void)containsMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern * __nonnull)pattern;

- (void)containsMatchWithNSString:(NSString * __nonnull)regex;

- (void)doesNotContainWithJavaLangCharSequence:(id<JavaLangCharSequence> __nonnull)string;

- (void)doesNotContainMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern * __nonnull)pattern;

- (void)doesNotContainMatchWithNSString:(NSString * __nonnull)regex;

- (void)doesNotMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern * __nonnull)regex;

- (void)doesNotMatchWithNSString:(NSString * __nonnull)regex;

- (void)endsWithWithNSString:(NSString * __nonnull)string;

- (void)hasLengthWithInt:(jint)expectedLength;

- (void)isEmpty;

- (void)isEqualToWithId:(id __nullable)expected;

- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(NSString * __nonnull)other;

- (void)isNotEmpty;

- (void)isNull;

- (void)matchesWithJavaUtilRegexPattern:(JavaUtilRegexPattern * __nonnull)regex;

- (void)matchesWithNSString:(NSString * __nonnull)regex;

- (ComGoogleCommonTruthStringSubject *)namedWithNSString:(NSString * __nonnull)arg0
                                       withNSObjectArray:(IOSObjectArray * __nonnull)arg1;

- (void)startsWithWithNSString:(NSString * __nonnull)string;

#pragma mark Protected

- (NSString *)actual;

- (NSString *)actualCustomStringRepresentation;

- (NSString *)getSubject;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)arg0
                                     withJavaLangComparable:(id<JavaLangComparable> __nonnull)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthStringSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthStringSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string);

FOUNDATION_EXPORT ComGoogleCommonTruthStringSubject *new_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthStringSubject *create_ComGoogleCommonTruthStringSubject_initWithComGoogleCommonTruthFailureStrategy_withNSString_(ComGoogleCommonTruthFailureStrategy *failureStrategy, NSString *string);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthStringSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthStringSubject")

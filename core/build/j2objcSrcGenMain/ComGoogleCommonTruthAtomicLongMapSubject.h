//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject")
#ifdef RESTRICT_ComGoogleCommonTruthAtomicLongMapSubject
#define INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthAtomicLongMapSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthAtomicLongMapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject || defined(INCLUDE_ComGoogleCommonTruthAtomicLongMapSubject))
#define ComGoogleCommonTruthAtomicLongMapSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "ComGoogleCommonTruthSubject.h"

@class ComGoogleCommonTruthFailureStrategy;
@class ComGoogleCommonUtilConcurrentAtomicLongMap;
@class IOSObjectArray;

@interface ComGoogleCommonTruthAtomicLongMapSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (void)containsEntryWithId:(id __nonnull)key
                   withLong:(jlong)value;

- (void)containsKeyWithId:(id __nonnull)key;

- (void)doesNotContainEntryWithId:(id __nullable)key
                         withLong:(jlong)value;

- (void)doesNotContainKeyWithId:(id __nonnull)key;

- (void)hasSizeWithInt:(jint)expectedSize;

- (void)hasSumWithLong:(jlong)expectedSum;

- (void)isEmpty;

- (void)isEqualToWithId:(id __nullable)other;

- (void)isNotEmpty;

- (void)isNotEqualToWithId:(id __nullable)other;

- (ComGoogleCommonTruthAtomicLongMapSubject *)namedWithNSString:(NSString * __nonnull)arg0
                                              withNSObjectArray:(IOSObjectArray * __nonnull)arg1;

#pragma mark Protected

- (ComGoogleCommonUtilConcurrentAtomicLongMap *)actual;

- (ComGoogleCommonUtilConcurrentAtomicLongMap *)getSubject;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
             withComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap * __nullable)map;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)arg0
                                                     withId:(id __nonnull)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAtomicLongMapSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthAtomicLongMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map);

FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *new_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *create_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAtomicLongMapSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/truth/core/src/main/java/com/google/common/truth/AtomicLongMapSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject")
#ifdef RESTRICT_ComGoogleCommonTruthAtomicLongMapSubject
#define INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthAtomicLongMapSubject

#if !defined (ComGoogleCommonTruthAtomicLongMapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject || defined(INCLUDE_ComGoogleCommonTruthAtomicLongMapSubject))
#define ComGoogleCommonTruthAtomicLongMapSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "ComGoogleCommonTruthSubject.h"

@class ComGoogleCommonTruthFailureStrategy;
@class ComGoogleCommonUtilConcurrentAtomicLongMap;
@class IOSObjectArray;

@interface ComGoogleCommonTruthAtomicLongMapSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (void)containsEntryWithId:(id)key
                   withLong:(jlong)value;

- (void)containsKeyWithId:(id)key;

- (void)doesNotContainEntryWithId:(id)key
                         withLong:(jlong)value;

- (void)doesNotContainKeyWithId:(id)key;

- (void)hasSizeWithInt:(jint)expectedSize;

- (void)hasSumWithLong:(jlong)expectedSum;

- (void)isEmpty;

- (void)isEqualToWithId:(id)other;

- (void)isNotEmpty;

- (void)isNotEqualToWithId:(id)other;

- (ComGoogleCommonTruthAtomicLongMapSubject *)namedWithNSString:(NSString *)arg0
                                              withNSObjectArray:(IOSObjectArray *)arg1;

#pragma mark Protected

- (ComGoogleCommonUtilConcurrentAtomicLongMap *)actual;

- (ComGoogleCommonUtilConcurrentAtomicLongMap *)getSubject;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
             withComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap *)map;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthAtomicLongMapSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthAtomicLongMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map);

FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *new_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthAtomicLongMapSubject *create_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthAtomicLongMapSubject)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthAtomicLongMapSubject")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/dopplJavaMain/com/google/common/truth/AtomicLongMapSubject.java
//

#include "ComGoogleCommonTruthAtomicLongMapSubject.h"
#include "ComGoogleCommonTruthFailureStrategy.h"
#include "ComGoogleCommonTruthSubject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/base/Preconditions.h"
#include "com/google/common/collect/Maps.h"
#include "com/google/common/util/concurrent/AtomicLongMap.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Map.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$5(void);

@implementation ComGoogleCommonTruthAtomicLongMapSubject

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
             withComGoogleCommonUtilConcurrentAtomicLongMap:(ComGoogleCommonUtilConcurrentAtomicLongMap * __nullable)map {
  ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(self, failureStrategy, map);
  return self;
}

- (void)isEqualToWithId:(id __nullable)other {
  [super isEqualToWithId:other];
}

- (void)isNotEqualToWithId:(id __nullable)other {
  [super isNotEqualToWithId:other];
}

- (void)isEmpty {
  if (![((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) isEmpty]) {
    [self failWithNSString:@"is empty"];
  }
}

- (void)isNotEmpty {
  if ([((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) isEmpty]) {
    [self failWithNSString:@"is not empty"];
  }
}

- (void)hasSizeWithInt:(jint)expectedSize {
  ComGoogleCommonBasePreconditions_checkArgumentWithBoolean_withNSString_withNSObjectArray_(expectedSize >= 0, @"expectedSize (%s) must be >= 0", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expectedSize) } count:1 type:NSObject_class_()]);
  jint actualSize = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) size];
  if (actualSize != expectedSize) {
    [self failWithBadResultsWithNSString:@"has a size of" withId:JavaLangInteger_valueOfWithInt_(expectedSize) withNSString:@"is" withId:JavaLangInteger_valueOfWithInt_(actualSize)];
  }
}

- (void)hasSumWithLong:(jlong)expectedSum {
  jlong actualSum = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) sum];
  if (actualSum != expectedSum) {
    [self failWithBadResultsWithNSString:@"has a sum of" withId:JavaLangLong_valueOfWithLong_(expectedSum) withNSString:@"is" withId:JavaLangLong_valueOfWithLong_(actualSum)];
  }
}

- (void)containsKeyWithId:(id __nonnull)key {
  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(key, @"AtomicLongMap does not support null keys");
  if (![((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) containsKeyWithId:key]) {
    [self failWithNSString:@"contains key" withId:key];
  }
}

- (void)doesNotContainKeyWithId:(id __nonnull)key {
  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(key, @"AtomicLongMap does not support null keys");
  if ([((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk([self actual])) containsKeyWithId:key]) {
    [self failWithNSString:@"does not contain key" withId:key];
  }
}

- (void)containsEntryWithId:(id __nonnull)key
                   withLong:(jlong)value {
  ComGoogleCommonBasePreconditions_checkNotNullWithId_withId_(key, @"AtomicLongMap does not support null keys");
  jlong actualValue = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk(([self actual]))) getWithId:key];
  if (actualValue != value) {
    [self failWithNSString:@"contains entry" withId:ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, JavaLangLong_valueOfWithLong_(value))];
  }
}

- (void)doesNotContainEntryWithId:(id __nullable)key
                         withLong:(jlong)value {
  if (key != nil) {
    jlong actualValue = [((ComGoogleCommonUtilConcurrentAtomicLongMap *) nil_chk(([self actual]))) getWithId:key];
    if (actualValue == value) {
      [self failWithNSString:@"does not contain entry" withId:ComGoogleCommonCollectMaps_immutableEntryWithId_withId_(key, JavaLangLong_valueOfWithLong_(value))];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
    { NULL, "V", 0x1, 3, 4, -1, -1, 5, 6 },
    { NULL, "V", 0x1, 7, 4, -1, -1, 8, 9 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 17, -1, -1, -1, 19 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withComGoogleCommonUtilConcurrentAtomicLongMap:);
  methods[1].selector = @selector(isEqualToWithId:);
  methods[2].selector = @selector(isNotEqualToWithId:);
  methods[3].selector = @selector(isEmpty);
  methods[4].selector = @selector(isNotEmpty);
  methods[5].selector = @selector(hasSizeWithInt:);
  methods[6].selector = @selector(hasSumWithLong:);
  methods[7].selector = @selector(containsKeyWithId:);
  methods[8].selector = @selector(doesNotContainKeyWithId:);
  methods[9].selector = @selector(containsEntryWithId:withLong:);
  methods[10].selector = @selector(doesNotContainEntryWithId:withLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;LComGoogleCommonUtilConcurrentAtomicLongMap;", "(Lcom/google/common/truth/FailureStrategy;Lcom/google/common/util/concurrent/AtomicLongMap<*>;)V", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$0, "isEqualTo", "LNSObject;", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$1, (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$2, "isNotEqualTo", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$3, (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$4, "hasSize", "I", "hasSum", "J", "containsKey", "doesNotContainKey", "containsEntry", "LNSObject;J", "doesNotContainEntry", (void *)&ComGoogleCommonTruthAtomicLongMapSubject__Annotations$5, "Lcom/google/common/truth/Subject<Lcom/google/common/truth/AtomicLongMapSubject;Lcom/google/common/util/concurrent/AtomicLongMap<*>;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthAtomicLongMapSubject = { "AtomicLongMapSubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 11, 0, -1, -1, -1, 20, -1 };
  return &_ComGoogleCommonTruthAtomicLongMapSubject;
}

@end

void ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthAtomicLongMapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) {
  ComGoogleCommonTruthSubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, map);
}

ComGoogleCommonTruthAtomicLongMapSubject *new_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthAtomicLongMapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_, failureStrategy, map)
}

ComGoogleCommonTruthAtomicLongMapSubject *create_ComGoogleCommonTruthAtomicLongMapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, ComGoogleCommonUtilConcurrentAtomicLongMap *map) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthAtomicLongMapSubject, initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonUtilConcurrentAtomicLongMap_, failureStrategy, map)
}

IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthAtomicLongMapSubject__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthAtomicLongMapSubject)

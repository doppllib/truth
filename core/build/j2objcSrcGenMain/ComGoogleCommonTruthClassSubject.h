//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/dopplJavaMain/com/google/common/truth/ClassSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthClassSubject")
#ifdef RESTRICT_ComGoogleCommonTruthClassSubject
#define INCLUDE_ALL_ComGoogleCommonTruthClassSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthClassSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthClassSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthClassSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthClassSubject || defined(INCLUDE_ComGoogleCommonTruthClassSubject))
#define ComGoogleCommonTruthClassSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "ComGoogleCommonTruthSubject.h"

@class ComGoogleCommonTruthFailureStrategy;
@class IOSClass;
@class IOSObjectArray;

@interface ComGoogleCommonTruthClassSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (void)isAssignableToWithIOSClass:(IOSClass * __nonnull)clazz;

- (ComGoogleCommonTruthClassSubject *)namedWithNSString:(NSString * __nonnull)arg0
                                      withNSObjectArray:(IOSObjectArray * __nonnull)arg1;

#pragma mark Protected

- (IOSClass *)actual;

- (IOSClass *)getSubject;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
                                               withIOSClass:(IOSClass * __nullable)o;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)arg0
                                                     withId:(id __nonnull)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthClassSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthClassSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o);

FOUNDATION_EXPORT ComGoogleCommonTruthClassSubject *new_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthClassSubject *create_ComGoogleCommonTruthClassSubject_initWithComGoogleCommonTruthFailureStrategy_withIOSClass_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSClass *o);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthClassSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthClassSubject")

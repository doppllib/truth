//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/dopplJavaMain/com/google/common/truth/PrimitiveIntArraySubject.java
//

#include "ComGoogleCommonTruthAbstractArraySubject.h"
#include "ComGoogleCommonTruthFailureStrategy.h"
#include "ComGoogleCommonTruthIterableSubject.h"
#include "ComGoogleCommonTruthPrimitiveIntArraySubject.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/common/primitives/Ints.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthPrimitiveIntArraySubject__Annotations$0(void);

@implementation ComGoogleCommonTruthPrimitiveIntArraySubject

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy * __nonnull)failureStrategy
                                               withIntArray:(IOSIntArray * __nullable)o {
  ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(self, failureStrategy, o);
  return self;
}

- (NSString *)underlyingType {
  return @"int";
}

- (id<JavaUtilList>)listRepresentation {
  return ComGoogleCommonPrimitivesInts_asListWithIntArray_([self actual]);
}

- (void)isEqualToWithId:(id __nonnull)expected {
  IOSIntArray *actual = [self actual];
  if (actual == expected) {
    return;
  }
  @try {
    IOSIntArray *expectedArray = (IOSIntArray *) cast_chk(expected, [IOSIntArray class]);
    if (!JavaUtilArrays_equalsWithIntArray_withIntArray_(actual, expectedArray)) {
      [self failWithNSString:@"is equal to" withId:ComGoogleCommonPrimitivesInts_asListWithIntArray_(expectedArray)];
    }
  }
  @catch (JavaLangClassCastException *e) {
    [self failWithBadTypeWithId:expected];
  }
}

- (void)isNotEqualToWithId:(id __nonnull)expected {
  IOSIntArray *actual = [self actual];
  @try {
    IOSIntArray *expectedArray = (IOSIntArray *) cast_chk(expected, [IOSIntArray class]);
    if (actual == expected || JavaUtilArrays_equalsWithIntArray_withIntArray_(actual, expectedArray)) {
      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonPrimitivesInts_asListWithIntArray_(expectedArray) } count:2 type:NSObject_class_()]];
    }
  }
  @catch (JavaLangClassCastException *ignored) {
  }
}

- (ComGoogleCommonTruthIterableSubject *)asList {
  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, [self listRepresentation]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, 1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withIntArray:);
  methods[1].selector = @selector(underlyingType);
  methods[2].selector = @selector(listRepresentation);
  methods[3].selector = @selector(isEqualToWithId:);
  methods[4].selector = @selector(isNotEqualToWithId:);
  methods[5].selector = @selector(asList);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[I", (void *)&ComGoogleCommonTruthPrimitiveIntArraySubject__Annotations$0, "()Ljava/util/List<Ljava/lang/Integer;>;", "isEqualTo", "LNSObject;", "isNotEqualTo", "Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/PrimitiveIntArraySubject;[I>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthPrimitiveIntArraySubject = { "PrimitiveIntArraySubject", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, 6, -1 };
  return &_ComGoogleCommonTruthPrimitiveIntArraySubject;
}

@end

void ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthPrimitiveIntArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) {
  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
}

ComGoogleCommonTruthPrimitiveIntArraySubject *new_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthPrimitiveIntArraySubject, initWithComGoogleCommonTruthFailureStrategy_withIntArray_, failureStrategy, o)
}

ComGoogleCommonTruthPrimitiveIntArraySubject *create_ComGoogleCommonTruthPrimitiveIntArraySubject_initWithComGoogleCommonTruthFailureStrategy_withIntArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSIntArray *o) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthPrimitiveIntArraySubject, initWithComGoogleCommonTruthFailureStrategy_withIntArray_, failureStrategy, o)
}

IOSObjectArray *ComGoogleCommonTruthPrimitiveIntArraySubject__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthPrimitiveIntArraySubject)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/truth/core/src/main/java/com/google/common/truth/SetMultimapSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject")
#ifdef RESTRICT_ComGoogleCommonTruthSetMultimapSubject
#define INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthSetMultimapSubject

#if !defined (ComGoogleCommonTruthSetMultimapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthSetMultimapSubject))
#define ComGoogleCommonTruthSetMultimapSubject_

#define RESTRICT_ComGoogleCommonTruthMultimapSubject 1
#define INCLUDE_ComGoogleCommonTruthMultimapSubject 1
#include "ComGoogleCommonTruthMultimapSubject.h"

@class ComGoogleCommonTruthFailureStrategy;
@class IOSObjectArray;
@protocol ComGoogleCommonCollectListMultimap;
@protocol ComGoogleCommonCollectMultimap;
@protocol ComGoogleCommonCollectSetMultimap;

@interface ComGoogleCommonTruthSetMultimapSubject : ComGoogleCommonTruthMultimapSubject

#pragma mark Public

- (void)isEqualToWithComGoogleCommonCollectListMultimap:(id<ComGoogleCommonCollectListMultimap>)other;

- (ComGoogleCommonTruthSetMultimapSubject *)namedWithNSString:(NSString *)format
                                            withNSObjectArray:(IOSObjectArray *)args;

#pragma mark Protected

- (id<ComGoogleCommonCollectMultimap>)actual;

- (id<ComGoogleCommonCollectMultimap>)getSubject;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                      withComGoogleCommonCollectSetMultimap:(id<ComGoogleCommonCollectSetMultimap>)multimap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthSetMultimapSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthSetMultimapSubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap);

FOUNDATION_EXPORT ComGoogleCommonTruthSetMultimapSubject *new_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthSetMultimapSubject *create_ComGoogleCommonTruthSetMultimapSubject_initWithComGoogleCommonTruthFailureStrategy_withComGoogleCommonCollectSetMultimap_(ComGoogleCommonTruthFailureStrategy *failureStrategy, id<ComGoogleCommonCollectSetMultimap> multimap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthSetMultimapSubject)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthSetMultimapSubject")

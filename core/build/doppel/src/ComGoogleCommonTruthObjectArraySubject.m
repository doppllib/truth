//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/truth/core/src/main/java/com/google/common/truth/ObjectArraySubject.java
//

#include "ComGoogleCommonBaseFunction.h"
#include "ComGoogleCommonBaseObjects.h"
#include "ComGoogleCommonBaseStrings.h"
#include "ComGoogleCommonCollectIterables.h"
#include "ComGoogleCommonCollectLists.h"
#include "ComGoogleCommonPrimitivesBooleans.h"
#include "ComGoogleCommonPrimitivesBytes.h"
#include "ComGoogleCommonPrimitivesChars.h"
#include "ComGoogleCommonPrimitivesDoubles.h"
#include "ComGoogleCommonPrimitivesFloats.h"
#include "ComGoogleCommonPrimitivesInts.h"
#include "ComGoogleCommonPrimitivesLongs.h"
#include "ComGoogleCommonPrimitivesShorts.h"
#include "ComGoogleCommonTruthAbstractArraySubject.h"
#include "ComGoogleCommonTruthFailureStrategy.h"
#include "ComGoogleCommonTruthIterableSubject.h"
#include "ComGoogleCommonTruthObjectArraySubject.h"
#include "ComGoogleCommonTruthPlatform.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "javax/annotation/Nullable.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleCommonTruthObjectArraySubject () {
 @public
  NSString *typeName_;
  jint numberOfDimensions_;
}

+ (id<JavaLangIterable>)stringableIterableWithNSObjectArray:(IOSObjectArray *)array;

+ (NSString *)typeNameFromInstanceWithId:(id)instance;

+ (jint)numberOfDimensionsWithId:(id)instance;

- (NSString *)checkArrayEqualsRecursiveWithId:(id)expectedArray
                                       withId:(id)actualArray
                                 withNSString:(NSString *)lastIndex;

@end

J2OBJC_FIELD_SETTER(ComGoogleCommonTruthObjectArraySubject, typeName_, NSString *)

inline id<ComGoogleCommonBaseFunction> ComGoogleCommonTruthObjectArraySubject_get_STRINGIFY();
static id<ComGoogleCommonBaseFunction> ComGoogleCommonTruthObjectArraySubject_STRINGIFY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonTruthObjectArraySubject, STRINGIFY, id<ComGoogleCommonBaseFunction>)

__attribute__((unused)) static id<JavaLangIterable> ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(IOSObjectArray *array);

__attribute__((unused)) static NSString *ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(id instance);

__attribute__((unused)) static jint ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(id instance);

__attribute__((unused)) static NSString *ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(ComGoogleCommonTruthObjectArraySubject *self, id expectedArray, id actualArray, NSString *lastIndex);

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$1();

@interface ComGoogleCommonTruthObjectArraySubject_$1 : NSObject < ComGoogleCommonBaseFunction >

- (id)applyWithId:(id)input;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthObjectArraySubject_$1)

__attribute__((unused)) static void ComGoogleCommonTruthObjectArraySubject_$1_init(ComGoogleCommonTruthObjectArraySubject_$1 *self);

__attribute__((unused)) static ComGoogleCommonTruthObjectArraySubject_$1 *new_ComGoogleCommonTruthObjectArraySubject_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleCommonTruthObjectArraySubject_$1 *create_ComGoogleCommonTruthObjectArraySubject_$1_init();

__attribute__((unused)) static IOSObjectArray *ComGoogleCommonTruthObjectArraySubject_$1__Annotations$0();

J2OBJC_INITIALIZED_DEFN(ComGoogleCommonTruthObjectArraySubject)

@implementation ComGoogleCommonTruthObjectArraySubject

- (instancetype)initWithComGoogleCommonTruthFailureStrategy:(ComGoogleCommonTruthFailureStrategy *)failureStrategy
                                          withNSObjectArray:(IOSObjectArray *)o {
  ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(self, failureStrategy, o);
  return self;
}

- (NSString *)underlyingType {
  return typeName_;
}

- (NSString *)brackets {
  return ComGoogleCommonBaseStrings_repeatWithNSString_withInt_(@"[]", numberOfDimensions_);
}

- (id<JavaUtilList>)listRepresentation {
  return ComGoogleCommonCollectLists_newArrayListWithJavaLangIterable_(ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_([self actual]));
}

+ (id<JavaLangIterable>)stringableIterableWithNSObjectArray:(IOSObjectArray *)array {
  return ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(array);
}

+ (NSString *)typeNameFromInstanceWithId:(id)instance {
  return ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(instance);
}

+ (jint)numberOfDimensionsWithId:(id)instance {
  return ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(instance);
}

- (void)isEqualToWithId:(id)expected {
  IOSObjectArray *actual = [self actual];
  if (actual == expected) {
    return;
  }
  @try {
    IOSObjectArray *expectedArray = (IOSObjectArray *) cast_check(expected, IOSClass_arrayType(NSObject_class_(), 1));
    if (((IOSObjectArray *) nil_chk(actual))->size_ != ((IOSObjectArray *) nil_chk(expectedArray))->size_) {
      [self failWithRawMessageWithNSString:@"%s has length %s. Expected length is %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], JavaLangInteger_valueOfWithInt_(actual->size_), JavaLangInteger_valueOfWithInt_(expectedArray->size_) } count:3 type:NSObject_class_()]];
    }
    else {
      NSString *index = ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expectedArray, actual, @"");
      if (index != nil) {
        [self failWithBadResultsWithNSString:@"is equal to" withId:ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(expectedArray) withNSString:@"differs at index" withId:index];
      }
    }
  }
  @catch (JavaLangClassCastException *e) {
    [self failWithBadTypeWithId:expected];
  }
}

- (NSString *)checkArrayEqualsRecursiveWithId:(id)expectedArray
                                       withId:(id)actualArray
                                 withNSString:(NSString *)lastIndex {
  return ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expectedArray, actualArray, lastIndex);
}

- (void)isNotEqualToWithId:(id)expected {
  IOSObjectArray *actual = [self actual];
  @try {
    IOSObjectArray *expectedArray = (IOSObjectArray *) cast_check(expected, IOSClass_arrayType(NSObject_class_(), 1));
    if (actual == expected || ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expectedArray, actual, @"") == nil) {
      [self failWithRawMessageWithNSString:@"%s unexpectedly equal to %s." withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self actualAsString], ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(expectedArray) } count:2 type:NSObject_class_()]];
    }
  }
  @catch (JavaLangClassCastException *ignored) {
  }
}

- (ComGoogleCommonTruthIterableSubject *)asList {
  return create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureStrategy_withJavaLangIterable_(failureStrategy_, JavaUtilArrays_asListWithNSObjectArray_([self actual]));
}

- (void)dealloc {
  RELEASE_(typeName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, 2 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 3, -1, -1 },
    { NULL, "LJavaLangIterable;", 0xa, 4, 5, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 11, 12, -1, -1, 13, -1 },
    { NULL, "V", 0x1, 14, 8, -1, -1, -1, -1 },
    { NULL, "LComGoogleCommonTruthIterableSubject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleCommonTruthFailureStrategy:withNSObjectArray:);
  methods[1].selector = @selector(underlyingType);
  methods[2].selector = @selector(brackets);
  methods[3].selector = @selector(listRepresentation);
  methods[4].selector = @selector(stringableIterableWithNSObjectArray:);
  methods[5].selector = @selector(typeNameFromInstanceWithId:);
  methods[6].selector = @selector(numberOfDimensionsWithId:);
  methods[7].selector = @selector(isEqualToWithId:);
  methods[8].selector = @selector(checkArrayEqualsRecursiveWithId:withId:withNSString:);
  methods[9].selector = @selector(isNotEqualToWithId:);
  methods[10].selector = @selector(asList);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "typeName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numberOfDimensions_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "STRINGIFY", "LComGoogleCommonBaseFunction;", .constantValue.asLong = 0, 0x1a, -1, 15, 16, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleCommonTruthFailureStrategy;[LNSObject;", "(Lcom/google/common/truth/FailureStrategy;[TT;)V", (void *)&ComGoogleCommonTruthObjectArraySubject__Annotations$0, "()Ljava/util/List<*>;", "stringableIterable", "[LNSObject;", "([Ljava/lang/Object;)Ljava/lang/Iterable<*>;", "typeNameFromInstance", "LNSObject;", "numberOfDimensions", "isEqualTo", "checkArrayEqualsRecursive", "LNSObject;LNSObject;LNSString;", (void *)&ComGoogleCommonTruthObjectArraySubject__Annotations$1, "isNotEqualTo", &ComGoogleCommonTruthObjectArraySubject_STRINGIFY, "Lcom/google/common/base/Function<Ljava/lang/Object;Ljava/lang/Object;>;", "<T:Ljava/lang/Object;>Lcom/google/common/truth/AbstractArraySubject<Lcom/google/common/truth/ObjectArraySubject<TT;>;[Lcom/google/common/truth/ObjectArraySubject$T;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthObjectArraySubject = { "ObjectArraySubject", "com.google.common.truth", ptrTable, methods, fields, 7, 0x11, 11, 3, -1, -1, -1, 17, -1 };
  return &_ComGoogleCommonTruthObjectArraySubject;
}

+ (void)initialize {
  if (self == [ComGoogleCommonTruthObjectArraySubject class]) {
    JreStrongAssignAndConsume(&ComGoogleCommonTruthObjectArraySubject_STRINGIFY, new_ComGoogleCommonTruthObjectArraySubject_$1_init());
    J2OBJC_SET_INITIALIZED(ComGoogleCommonTruthObjectArraySubject)
  }
}

@end

void ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthObjectArraySubject *self, ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) {
  ComGoogleCommonTruthAbstractArraySubject_initWithComGoogleCommonTruthFailureStrategy_withId_(self, failureStrategy, o);
  JreStrongAssign(&self->typeName_, ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(o));
  self->numberOfDimensions_ = ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(o);
}

ComGoogleCommonTruthObjectArraySubject *new_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthObjectArraySubject, initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_, failureStrategy, o)
}

ComGoogleCommonTruthObjectArraySubject *create_ComGoogleCommonTruthObjectArraySubject_initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_(ComGoogleCommonTruthFailureStrategy *failureStrategy, IOSObjectArray *o) {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthObjectArraySubject, initWithComGoogleCommonTruthFailureStrategy_withNSObjectArray_, failureStrategy, o)
}

id<JavaLangIterable> ComGoogleCommonTruthObjectArraySubject_stringableIterableWithNSObjectArray_(IOSObjectArray *array) {
  ComGoogleCommonTruthObjectArraySubject_initialize();
  return ComGoogleCommonCollectIterables_transformWithJavaLangIterable_withComGoogleCommonBaseFunction_(JavaUtilArrays_asListWithNSObjectArray_(array), ComGoogleCommonTruthObjectArraySubject_STRINGIFY);
}

NSString *ComGoogleCommonTruthObjectArraySubject_typeNameFromInstanceWithId_(id instance) {
  ComGoogleCommonTruthObjectArraySubject_initialize();
  if (instance == nil) {
    return @"null reference of unknown array type";
  }
  else {
    if (![[instance java_getClass] isArray]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", [[instance java_getClass] getName], @" instance passed into T[] subject."));
    }
    IOSClass *type = [[instance java_getClass] getComponentType];
    if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Primitive array passed into T[] subject.");
    }
    while ([((IOSClass *) nil_chk(type)) isArray]) {
      type = [type getComponentType];
    }
    return ComGoogleCommonTruthPlatform_compressTypeWithNSString_([type description]);
  }
}

jint ComGoogleCommonTruthObjectArraySubject_numberOfDimensionsWithId_(id instance) {
  ComGoogleCommonTruthObjectArraySubject_initialize();
  if (instance == nil) {
    return 0;
  }
  IOSClass *type = [instance java_getClass];
  jint dimensions = 0;
  while ([((IOSClass *) nil_chk(type)) isArray]) {
    dimensions++;
    type = [type getComponentType];
  }
  return dimensions;
}

NSString *ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(ComGoogleCommonTruthObjectArraySubject *self, id expectedArray, id actualArray, NSString *lastIndex) {
  jint actualLength = ComGoogleCommonTruthPlatform_getArrayLengthWithId_(actualArray);
  jint expectedLength = ComGoogleCommonTruthPlatform_getArrayLengthWithId_(expectedArray);
  for (jint i = 0; i < actualLength || i < expectedLength; i++) {
    NSString *index = JreStrcat("$CIC", lastIndex, '[', i, ']');
    if (i < expectedLength && i < actualLength) {
      id expected = ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(expectedArray, i);
      id actual = ComGoogleCommonTruthPlatform_getFromArrayWithId_withInt_(actualArray, i);
      if (actual != nil && [[actual java_getClass] isArray] && expected != nil && [[expected java_getClass] isArray]) {
        NSString *result = ComGoogleCommonTruthObjectArraySubject_checkArrayEqualsRecursiveWithId_withId_withNSString_(self, expected, actual, index);
        if (result != nil) {
          return result;
        }
        continue;
      }
      else if (ComGoogleCommonBaseObjects_equalWithId_withId_(actual, expected)) {
        continue;
      }
    }
    return index;
  }
  return nil;
}

IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *ComGoogleCommonTruthObjectArraySubject__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleCommonTruthObjectArraySubject)

@implementation ComGoogleCommonTruthObjectArraySubject_$1

- (id)applyWithId:(id)input {
  if (input != nil && [[input java_getClass] isArray]) {
    id<JavaLangIterable> iterable;
    if ([input java_getClass] == (id) IOSClass_booleanArray(1)) {
      iterable = ComGoogleCommonPrimitivesBooleans_asListWithBooleanArray_((IOSBooleanArray *) cast_chk(input, [IOSBooleanArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_intArray(1)) {
      iterable = ComGoogleCommonPrimitivesInts_asListWithIntArray_((IOSIntArray *) cast_chk(input, [IOSIntArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_longArray(1)) {
      iterable = ComGoogleCommonPrimitivesLongs_asListWithLongArray_((IOSLongArray *) cast_chk(input, [IOSLongArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_shortArray(1)) {
      iterable = ComGoogleCommonPrimitivesShorts_asListWithShortArray_((IOSShortArray *) cast_chk(input, [IOSShortArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_byteArray(1)) {
      iterable = ComGoogleCommonPrimitivesBytes_asListWithByteArray_((IOSByteArray *) cast_chk(input, [IOSByteArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_doubleArray(1)) {
      iterable = ComGoogleCommonPrimitivesDoubles_asListWithDoubleArray_((IOSDoubleArray *) cast_chk(input, [IOSDoubleArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_floatArray(1)) {
      iterable = ComGoogleCommonPrimitivesFloats_asListWithFloatArray_((IOSFloatArray *) cast_chk(input, [IOSFloatArray class]));
    }
    else if ([input java_getClass] == (id) IOSClass_charArray(1)) {
      iterable = ComGoogleCommonPrimitivesChars_asListWithCharArray_((IOSCharArray *) cast_chk(input, [IOSCharArray class]));
    }
    else {
      iterable = JavaUtilArrays_asListWithNSObjectArray_((IOSObjectArray *) cast_check(input, IOSClass_arrayType(NSObject_class_(), 1)));
    }
    return ComGoogleCommonCollectIterables_transformWithJavaLangIterable_withComGoogleCommonBaseFunction_(iterable, JreLoadStatic(ComGoogleCommonTruthObjectArraySubject, STRINGIFY));
  }
  return input;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleCommonTruthObjectArraySubject_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, 2 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LNSObject;", (void *)&ComGoogleCommonTruthObjectArraySubject_$1__Annotations$0, "LComGoogleCommonTruthObjectArraySubject;", "Ljava/lang/Object;Lcom/google/common/base/Function<Ljava/lang/Object;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleCommonTruthObjectArraySubject_$1 = { "", "com.google.common.truth", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_ComGoogleCommonTruthObjectArraySubject_$1;
}

@end

void ComGoogleCommonTruthObjectArraySubject_$1_init(ComGoogleCommonTruthObjectArraySubject_$1 *self) {
  NSObject_init(self);
}

ComGoogleCommonTruthObjectArraySubject_$1 *new_ComGoogleCommonTruthObjectArraySubject_$1_init() {
  J2OBJC_NEW_IMPL(ComGoogleCommonTruthObjectArraySubject_$1, init)
}

ComGoogleCommonTruthObjectArraySubject_$1 *create_ComGoogleCommonTruthObjectArraySubject_$1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleCommonTruthObjectArraySubject_$1, init)
}

IOSObjectArray *ComGoogleCommonTruthObjectArraySubject_$1__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}
